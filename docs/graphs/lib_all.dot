digraph cflow {
    node [shape="box"]
    csrf_generate_token [label="result_t *csrf_generate_token (char **out_token)
/home/runner/work/sfe/sfe/backend/lib/csrf/csrf.c:67"]
    csrf_generate_token -> RAND_bytes
    csrf_generate_token -> result_critical_failure
    csrf_generate_token -> time
    csrf_generate_token -> get_csrf_secret
    csrf_generate_token -> strlen
    csrf_generate_token -> result_free
    csrf_generate_token -> memcpy
    csrf_generate_token -> HMAC
    csrf_generate_token -> EVP_sha256
    csrf_generate_token -> result_failure
    csrf_generate_token -> result_add_extra
    csrf_generate_token -> malloc
    csrf_generate_token -> to_hex
    csrf_generate_token -> result_success
    RAND_bytes [label="RAND_bytes()"]
    result_critical_failure [label="result_critical_failure()"]
    time [label="time()"]
    get_csrf_secret [label="result_t *get_csrf_secret (char **out_secret)
/home/runner/work/sfe/sfe/backend/lib/secrets/secrets.c:97"]
    get_csrf_secret -> result_failure
    get_csrf_secret -> read_secret_file
    get_csrf_secret -> result_success
    result_failure [label="result_failure()"]
    read_secret_file [label="result_t *read_secret_file (const char *path, char **out_secret)
/home/runner/work/sfe/sfe/backend/lib/secrets/secrets.c:23"]
    read_secret_file -> result_failure
    read_secret_file -> result_add_extra
    read_secret_file -> fopen
    read_secret_file -> fseek
    read_secret_file -> fclose
    read_secret_file -> ftell
    read_secret_file -> rewind
    read_secret_file -> malloc
    read_secret_file -> result_critical_failure
    read_secret_file -> fread
    read_secret_file -> free
    read_secret_file -> result_success
    result_add_extra [label="void result_add_extra (result_t *res, const char *format, ...)
/home/runner/work/sfe/sfe/backend/lib/result/result.c:71"]
    result_add_extra -> va_start
    result_add_extra -> va_copy
    result_add_extra -> vsnprintf
    result_add_extra -> va_end
    result_add_extra -> malloc
    result_add_extra -> free
    va_start [label="va_start()"]
    va_copy [label="va_copy()"]
    vsnprintf [label="vsnprintf()"]
    va_end [label="va_end()"]
    malloc [label="malloc()"]
    free [label="free()"]
    fopen [label="fopen()"]
    fseek [label="fseek()"]
    fclose [label="fclose()"]
    ftell [label="ftell()"]
    rewind [label="rewind()"]
    fread [label="fread()"]
    result_success [label="result_success()"]
    strlen [label="strlen()"]
    result_free [label="void result_free (result_t *res)
/home/runner/work/sfe/sfe/backend/lib/result/result.c:57"]
    result_free -> free
    memcpy [label="memcpy()"]
    HMAC [label="HMAC()"]
    EVP_sha256 [label="EVP_sha256()"]
    to_hex [label="void to_hex (const unsigned char *src, size_t len, char *dest)
/home/runner/work/sfe/sfe/backend/lib/csrf/csrf.c:31"]
    to_hex -> hex_char
    hex_char [label="char hex_char (unsigned char c)
/home/runner/work/sfe/sfe/backend/lib/csrf/csrf.c:23"]
    csrf_validate_token [label="result_t *csrf_validate_token (const char *token)
/home/runner/work/sfe/sfe/backend/lib/csrf/csrf.c:154"]
    csrf_validate_token -> result_failure
    csrf_validate_token -> sanitizec_apply
    csrf_validate_token -> result_critical_failure
    csrf_validate_token -> strlen
    csrf_validate_token -> result_add_extra
    csrf_validate_token -> free
    csrf_validate_token -> from_hex
    csrf_validate_token -> time
    csrf_validate_token -> get_csrf_secret
    csrf_validate_token -> result_free
    csrf_validate_token -> memcpy
    csrf_validate_token -> HMAC
    csrf_validate_token -> EVP_sha256
    csrf_validate_token -> memcmp
    csrf_validate_token -> result_success
    sanitizec_apply [label="sanitizec_apply()"]
    from_hex [label="bool from_hex (const char *src, unsigned char *dest, size_t len)
/home/runner/work/sfe/sfe/backend/lib/csrf/csrf.c:48"]
    from_hex -> sscanf
    sscanf [label="sscanf()"]
    memcmp [label="int memcmp (const void *a, const void *b, size_t len)
/home/runner/work/sfe/sfe/backend/lib/memcmp/memcmp.c:3"]
    hash_password [label="result_t *hash_password (const char *password, char **out_hash)
/home/runner/work/sfe/sfe/backend/lib/hash_password/hash_password.c:23"]
    hash_password -> result_failure
    hash_password -> sodium_init
    hash_password -> result_critical_failure
    hash_password -> malloc
    hash_password -> crypto_pwhash_str
    hash_password -> strlen
    hash_password -> free
    hash_password -> result_add_extra
    hash_password -> result_success
    sodium_init [label="sodium_init()"]
    crypto_pwhash_str [label="crypto_pwhash_str()"]
    issue_jwt [label="result_t *issue_jwt (const char *id, char **out_token)
/home/runner/work/sfe/sfe/backend/lib/jwt/jwt.c:22"]
    issue_jwt -> result_failure
    issue_jwt -> result_add_extra
    issue_jwt -> get_jwt_secret
    issue_jwt -> strlen
    issue_jwt -> result_free
    issue_jwt -> json_object_new_object
    issue_jwt -> result_critical_failure
    issue_jwt -> json_object_object_add
    issue_jwt -> json_object_new_string
    issue_jwt -> time
    issue_jwt -> json_object_new_int64
    issue_jwt -> jwtc_generate
    issue_jwt -> json_object_put
    issue_jwt -> free
    issue_jwt -> result_success
    get_jwt_secret [label="result_t *get_jwt_secret (char **out_secret)
/home/runner/work/sfe/sfe/backend/lib/secrets/secrets.c:120"]
    get_jwt_secret -> result_failure
    get_jwt_secret -> read_secret_file
    get_jwt_secret -> result_success
    json_object_new_object [label="json_object_new_object()"]
    json_object_object_add [label="json_object_object_add()"]
    json_object_new_string [label="json_object_new_string()"]
    json_object_new_int64 [label="json_object_new_int64()"]
    jwtc_generate [label="jwtc_generate()"]
    json_object_put [label="json_object_put()"]
    json_to_user [label="result_t *json_to_user (const char *json_str, user_t **out_user)
/home/runner/work/sfe/sfe/backend/lib/models/user_model/user_model.c:67"]
    json_to_user -> result_failure
    json_to_user -> result_add_extra
    json_to_user -> json_tokener_parse
    json_to_user -> malloc
    json_to_user -> result_critical_failure
    json_to_user -> json_object_put
    json_to_user -> json_object_object_get_ex
    json_to_user -> json_object_get_int
    json_to_user -> json_object_get_string
    json_to_user -> strdup
    json_to_user -> user_free
    json_to_user -> result_success
    json_tokener_parse [label="json_tokener_parse()"]
    json_object_object_get_ex [label="json_object_object_get_ex()"]
    json_object_get_int [label="json_object_get_int()"]
    json_object_get_string [label="json_object_get_string()"]
    strdup [label="strdup()"]
    user_free [label="void user_free (user_t *user)
/home/runner/work/sfe/sfe/backend/lib/models/user_model/user_model.c:137"]
    user_free -> free
    read_get_data [label="result_t *read_get_data (char **out_query)
/home/runner/work/sfe/sfe/backend/lib/read_get_data/read_get_data.c:15"]
    read_get_data -> result_failure
    read_get_data -> getenv
    read_get_data -> strlen
    read_get_data -> malloc
    read_get_data -> result_critical_failure
    read_get_data -> memcpy
    read_get_data -> result_success
    getenv [label="getenv()"]
    read_post_data [label="result_t *read_post_data (char **out_body)
/home/runner/work/sfe/sfe/backend/lib/read_post_data/read_post_data.c:13"]
    read_post_data -> getenv
    read_post_data -> result_failure
    read_post_data -> result_add_extra
    read_post_data -> strtol
    read_post_data -> malloc
    read_post_data -> result_critical_failure
    read_post_data -> fread
    read_post_data -> free
    read_post_data -> result_success
    strtol [label="strtol()"]
    response_append_json [label="void response_append_json (response_t *resp, struct json_object *obj)
/home/runner/work/sfe/sfe/backend/lib/response/response.c:78"]
    response_append_json -> json_object_new_array
    response_append_json -> json_object_object_add
    response_append_json -> json_object_get
    response_append_json -> json_object_array_add
    response_append_json -> json_object_put
    json_object_new_array [label="json_object_new_array()"]
    json_object_get [label="json_object_get()"]
    json_object_array_add [label="json_object_array_add()"]
    response_append_str [label="void response_append_str (response_t *resp, const char *msg)
/home/runner/work/sfe/sfe/backend/lib/response/response.c:49"]
    response_append_str -> json_object_new_array
    response_append_str -> json_object_object_add
    response_append_str -> json_object_new_string
    response_append_str -> json_object_array_add
    response_append_str -> json_object_put
    response_free [label="void response_free (response_t *resp)
/home/runner/work/sfe/sfe/backend/lib/response/response.c:150"]
    response_free -> json_object_put
    response_init [label="void response_init (response_t *resp, unsigned int http_code)
/home/runner/work/sfe/sfe/backend/lib/response/response.c:16"]
    response_init -> json_object_put
    response_init -> json_object_new_object
    response_init -> json_object_object_add
    response_init -> json_object_new_int
    response_init -> json_object_new_array
    json_object_new_int [label="json_object_new_int()"]
    response_send [label="void response_send (response_t *resp)
/home/runner/work/sfe/sfe/backend/lib/response/response.c:107"]
    response_send -> json_object_new_object
    response_send -> json_object_object_add
    response_send -> json_object_new_int
    response_send -> json_object_new_array
    response_send -> json_object_to_json_string_ext
    response_send -> printf
    json_object_to_json_string_ext [label="json_object_to_json_string_ext()"]
    printf [label="printf()"]
    result_new_critical_failure [label="result_t *result_new_critical_failure (const char *message, const char *extra_info, int error_code, const char *failed_file, const char *failed_func)
/home/runner/work/sfe/sfe/backend/lib/result/result.c:48"]
    result_new_critical_failure -> result_new_impl
    result_new_impl [label="result_t *result_new_impl (result_code_t rc, const char *message, const char *extra_info, int error_code, const char *failed_file, const char *failed_func)
/home/runner/work/sfe/sfe/backend/lib/result/result.c:24"]
    result_new_impl -> malloc
    result_new_impl -> safe_strdup
    safe_strdup [label="char *safe_strdup (const char *s)
/home/runner/work/sfe/sfe/backend/lib/result/result.c:9"]
    safe_strdup -> strdup
    result_new_failure [label="result_t *result_new_failure (const char *message, const char *extra_info, int error_code, const char *failed_file, const char *failed_func)
/home/runner/work/sfe/sfe/backend/lib/result/result.c:41"]
    result_new_failure -> result_new_impl
    result_new_success [label="result_t *result_new_success (void)
/home/runner/work/sfe/sfe/backend/lib/result/result.c:16"]
    result_new_success -> malloc
    result_to_json [label="struct json_object *result_to_json (const result_t *res)
/home/runner/work/sfe/sfe/backend/lib/result/result.c:94"]
    result_to_json -> json_object_new_object
    result_to_json -> json_object_object_add
    result_to_json -> json_object_new_string
    result_to_json -> json_object_new_int
    result_to_json -> json_object_put
    test_fail [label="result_t *test_fail (void)
/home/runner/work/sfe/sfe/backend/lib/result_test/result_test.c:3"]
    test_fail -> result_failure
    test_fail -> result_add_extra
    user_fetch_by_id [label="result_t *user_fetch_by_id (sqlite3 *db, int id, user_t **out_user)
/home/runner/work/sfe/sfe/backend/lib/dal/user/user.c:103"]
    user_fetch_by_id -> result_failure
    user_fetch_by_id -> result_add_extra
    user_fetch_by_id -> sqlite3_prepare_v2
    user_fetch_by_id -> sqlite3_errmsg
    user_fetch_by_id -> sqlite3_bind_int
    user_fetch_by_id -> sqlite3_step
    user_fetch_by_id -> malloc
    user_fetch_by_id -> result_critical_failure
    user_fetch_by_id -> sqlite3_finalize
    user_fetch_by_id -> sqlite3_column_int
    user_fetch_by_id -> sqlite3_column_text
    user_fetch_by_id -> strdup
    user_fetch_by_id -> user_free
    user_fetch_by_id -> result_success
    sqlite3_prepare_v2 [label="sqlite3_prepare_v2()"]
    sqlite3_errmsg [label="sqlite3_errmsg()"]
    sqlite3_bind_int [label="sqlite3_bind_int()"]
    sqlite3_step [label="sqlite3_step()"]
    sqlite3_finalize [label="sqlite3_finalize()"]
    sqlite3_column_int [label="sqlite3_column_int()"]
    sqlite3_column_text [label="sqlite3_column_text()"]
    user_fetch_by_username [label="result_t *user_fetch_by_username (sqlite3 *db, const char *username, user_t **out_user)
/home/runner/work/sfe/sfe/backend/lib/dal/user/user.c:178"]
    user_fetch_by_username -> result_failure
    user_fetch_by_username -> result_add_extra
    user_fetch_by_username -> sqlite3_prepare_v2
    user_fetch_by_username -> sqlite3_errmsg
    user_fetch_by_username -> sqlite3_bind_text
    user_fetch_by_username -> sqlite3_finalize
    user_fetch_by_username -> sqlite3_step
    user_fetch_by_username -> malloc
    user_fetch_by_username -> result_critical_failure
    user_fetch_by_username -> sqlite3_column_int
    user_fetch_by_username -> sqlite3_column_text
    user_fetch_by_username -> strdup
    user_fetch_by_username -> user_free
    user_fetch_by_username -> result_success
    sqlite3_bind_text [label="sqlite3_bind_text()"]
    user_insert [label="result_t *user_insert (sqlite3 *db, const user_t *user, user_t **out_user)
/home/runner/work/sfe/sfe/backend/lib/dal/user/user.c:16"]
    user_insert -> result_failure
    user_insert -> result_add_extra
    user_insert -> sqlite3_prepare_v2
    user_insert -> result_critical_failure
    user_insert -> sqlite3_errmsg
    user_insert -> sqlite3_bind_text
    user_insert -> sqlite3_step
    user_insert -> sqlite3_finalize
    user_insert -> malloc
    user_insert -> sqlite3_last_insert_rowid
    user_insert -> strdup
    user_insert -> user_free
    user_insert -> result_success
    sqlite3_last_insert_rowid [label="sqlite3_last_insert_rowid()"]
    user_to_json [label="result_t *user_to_json (const user_t *user, char **out_json)
/home/runner/work/sfe/sfe/backend/lib/models/user_model/user_model.c:12"]
    user_to_json -> result_failure
    user_to_json -> result_add_extra
    user_to_json -> json_object_new_object
    user_to_json -> result_critical_failure
    user_to_json -> json_object_object_add
    user_to_json -> json_object_new_string
    user_to_json -> json_object_new_int
    user_to_json -> json_object_to_json_string
    user_to_json -> strdup
    user_to_json -> json_object_put
    user_to_json -> result_success
    json_object_to_json_string [label="json_object_to_json_string()"]
    val_jwt [label="result_t *val_jwt (const char *token, struct json_object **claims_out)
/home/runner/work/sfe/sfe/backend/lib/jwt/jwt.c:93"]
    val_jwt -> result_failure
    val_jwt -> result_add_extra
    val_jwt -> sanitizec_apply
    val_jwt -> get_jwt_secret
    val_jwt -> free
    val_jwt -> strlen
    val_jwt -> result_free
    val_jwt -> jwtc_validate
    val_jwt -> json_object_put
    val_jwt -> result_success
    jwtc_validate [label="jwtc_validate()"]
    verify_password [label="result_t *verify_password (const char *password, const char *stored_hash)
/home/runner/work/sfe/sfe/backend/lib/hash_password/hash_password.c:81"]
    verify_password -> result_failure
    verify_password -> result_add_extra
    verify_password -> sodium_init
    verify_password -> result_critical_failure
    verify_password -> crypto_pwhash_str_verify
    verify_password -> strlen
    verify_password -> result_success
    crypto_pwhash_str_verify [label="crypto_pwhash_str_verify()"]
}
